function isLetter(e){return 1===e.length&&e.match(/[a-z]/i)}function isDigit(e){return/^\d+$/.test(e)}class BASIC{constructor(){this.lines=[],this.variables=new Map,this.precedence=[],this.precedence.push({operator:"+",precedence:2,associativity:"left"}),this.precedence.push({operator:"-",precedence:2,associativity:"left"}),this.precedence.push({operator:"/",precedence:3,associativity:"left"}),this.precedence.push({operator:"*",precedence:3,associativity:"left"}),this.precedence.push({operator:"^",precedence:4,associativity:"right"})}run(e){this.lines=[];var i=e.split(/\r?\n|\r|\n/g);for(let e of i){if(""==e.trim())continue;e=e.trim();let i=this.tokenize(e);if(i.err)return void console.log(i.err);if(i.length>0&&("integer"==i[0].type||"label"==i[0].type)){let l=!1,t=0;for(t=0;t<this.lines.length;t++)if(this.lines[t].label==i[0].value){l=!0;break}if(l)return void console.log("Duplicate line label!\n");this.lines.push({label:i[0].value,line:i.slice(1),raw_line:e})}else this.lines.push({label:null,line:i,raw_line:e})}let l=0,t=e=>!!this.variables.has(e)&&"fn"==this.variables.get(e).type,s=e=>this.variables.has(e),n=e=>{for(let i=0;i<this.precedence.length;i++)if(this.precedence[i].operator==e)return this.precedence[i].precedence;return null},r=e=>{for(let i=0;i<this.precedence.length;i++)if(this.precedence[i].operator==e)return this.precedence[i].associativity;return null},h=(...e)=>{let i=1;for(let t of e){if(1==t.length){if(this.lines[l].line[i].type!=t[0])return{err:`Expected ${t[0]} got ${this.lines[l].line[i].type}`}}else if(2==t.length){if(this.lines[l].line[i].type!=t[0])return{err:`Expected ${t[0]} got ${this.lines[l].line[i].type}`};if(this.lines[l].line[i].value!=t[1])return{err:`Expected ${t[1]} got ${this.lines[l].line[i].value}`}}i+=1}return!0},o=0;e:for(;l<this.lines.length;){if("keyword"==this.lines[l].line[0].type)if("PRINT"==this.lines[l].line[0].value)this.print(this.lines[l].line[1].value);else if("DIM"==this.lines[l].line[0].value){let e=h(["identifier"]);if(e.err){console.log(e.err),o=1;break e}let i=this.lines[l].line[1].value;this.variables.set(i,{value:null,name:i})}else{if("GOTO"!=this.lines[l].line[0].value){console.log("Unknown token\n"+this.lines[l].raw_line),o=1;break e}{let e=!1;for(let i=0;i<this.lines.length;i++)if(this.lines[i].label==this.lines[l].line[1].value){l=i-1,e=!0;break}if(!e){console.log(`Couldn't find label ${this.lines[l].line[1].value}`),o=1;break e}}}else{if("identifier"!=this.lines[l].line[0].type){console.log("Unknown token\n"+this.lines[l].raw_line),o=1;break e}{if(!this.variables.has(this.lines[l].line[0].value)){console.log(`Unknown variable ${this.lines[l].line[0].value}\n${this.lines[l].raw_line}`),o=1;break e}let e=h(["operator","="]);if(e.err){console.log(e.err),o=1;break e}let i=2,p=[],a=[];for(;i<this.lines[l].line.length;){if("integer"==this.lines[l].line[i].type||"float"==this.lines[l].line[i].type)a.push(this.lines[l].line[i]);else if("paren"==this.lines[l].line[i].type){if("("==this.lines[l].line[i].value)p.push("(");else if(")"==this.lines[l].line[i].value){for(;"("!=p[p.length-1];){if(0==p.length){console.log(`Mismatched parenthesis!\n${this.lines[l].raw_line}`),o=1;break e}a.push(p.pop())}"("==p[p.length-1]&&p.pop(),t(p[p.length-1])&&a.push(p.pop())}}else if("comma"==this.lines[l].line[i].type)for(;"("!=p[p.length-1];)a.push(p.pop());else if("operator"==this.lines[l].line[i].type){for(;"("!=p[p.length-1]&&n(p[p.length-1])>n(this.lines[l].line[i].value||n(p[p.length-1])==n(this.lines[l].line[i].value)&&"left"==r(this.lines[l].line[i].value));)a.push(p.pop());p.push(this.lines[l].line[i].value)}else"identifier"==this.lines[l].line[i].type&&(t(this.lines[l].line[i].value)?p.push(this.lines[l].line[i].value):s(this.lines[l].line[i].value)&&a.push(this.variables.get(this.lines[l].line[i].value)));i++}for(;p.length>0;){if("("==p[p.length-1]){console.log(`Mismatched parenthesis!\n${this.lines[l].raw_line}`),o=1;break e}a.push(p.pop())}console.log(a);let u=[];for(let e=0;e<a.length;e++)if("+"==a[e])u.push(u.pop()+u.pop());else if("-"==a[e]){let e=u.pop(),i=u.pop();u.push(i-e)}else if("*"==a[e])u.push(u.pop()*u.pop());else if("/"==a[e]){let e=u.pop(),i=u.pop();u.push(i/e)}else u.push(a[e].value);if(1!=u.length){console.log(`Error in expression!\n${this.lines[l].raw_line}`),o=1;break e}this.variables.get(this.lines[l].line[0].value).value=u[0]}}l++}}print(e){console.log(e)}tokenize(e){let i=[],l=0;for(;l<e.length;){if(isLetter(e[l])){let t="";for(;l<e.length&&isLetter(e[l]);)t+=e[l],l++;":"==e[l]?i.push({type:"label",value:t}):(["FOR","DIM","TO","PRINT","GOTO","AS"].includes(t.toUpperCase())?(t=t.toUpperCase(),i.push({type:"keyword",value:t})):i.push({type:"identifier",value:t}),l--)}else if(isDigit(e[l])){let t="",s=!1;for(;l<e.length&&(isDigit(e[l])||"."==e[l]);){if("."==e[l]){if(s)return{err:`Too many decimal points!\n${e}\n${" ".repeat(l)}^`};s=!0}t+=e[l],l++}l--,s?i.push({type:"float",value:Number(t)}):i.push({type:"integer",value:Number(t)})}else if(["=","+","-","/","*","^"].includes(e[l]))i.push({type:"operator",value:e[l]});else if(["(",")"].includes(e[l]))i.push({type:"paren",value:e[l]});else if(","==e[l])i.push({type:"comma",value:e[l]});else if('"'==e[l]){let t="";for(l++;l<e.length&&'"'!=e[l];)t+=e[l],l++;i.push({type:"string",value:t})}else if(" "!=e[l])return{err:`Unknown Token! "${e[l]}"\n${e}\n${" ".repeat(l)}^`};l++}return i}}